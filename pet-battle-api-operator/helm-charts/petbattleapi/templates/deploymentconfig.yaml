{{- if .Values.deploymentConfig }}
---
apiVersion: apps.openshift.io/v1
kind: DeploymentConfig
metadata:
  labels:
    app: {{ .Values.appName }}
    app.kubernetes.io/component: {{ .Values.appName }}
    app.kubernetes.io/instance: {{ .Values.appName }}
  name: {{ .Values.appName }}
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    deploymentconfig: {{ .Values.appName }}
  strategy:
    activeDeadlineSeconds: 21600
    resources: {}
    rollingParams:
      intervalSeconds: 1
      maxSurge: 25%
      maxUnavailable: 25%
      timeoutSeconds: 600
      updatePeriodSeconds: 1
    type: Rolling
  template:
    metadata:
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/path: '/metrics'
        prometheus.io/port: '8080'
      creationTimestamp: null
      labels:
        deploymentconfig: {{ .Values.appName }}
    spec:
      containers:
{{- if .Values.mongodbTemplate.enabled }}
        - env:
            - name: DATABASE_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: database-admin-password
                  name: mongodb
            - name: DATABASE_NAME
              valueFrom:
                secretKeyRef:
                  key: database-name
                  name: mongodb
            - name: DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: database-password
                  name: mongodb
            - name: DATABASE_USER
              valueFrom:
                secretKeyRef:
                  key: database-user
                  name: mongodb
{{- else }}
        - env:
            - name: DATABASE_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: password
                  name: cats-mongodb-replicaset-admin
            - name: DATABASE_NAME
              value: "test"
            - name: MONGODB_SERVICE_HOST
              value: {{ printf "%s-%s" .Values.appName "mongodb-replicaset" | quote }}
            - name: MONGODB_SERVICE_PORT
              value: '27017'
            - name: DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: password
                  name: cats-mongodb-replicaset-admin
            - name: DATABASE_USER
              valueFrom:
                secretKeyRef:
                  key: user
                  name: cats-mongodb-replicaset-admin
{{- end }}
          image: ''
          imagePullPolicy: Always
          name: {{ .Values.appName }}
          ports:
            - containerPort: 8080
              protocol: TCP
            - containerPort: 8443
              protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
  test: false
  triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
          - {{ .Values.appName }}
        from:
          kind: ImageStreamTag
          name: pet-battle-api:latest
        lastTriggeredImage: {{ .Values.appName }}/pet-battle-api:{{ .Chart.AppVersion }}
      type: ImageChange
{{ end }}
