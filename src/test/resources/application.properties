# configure the MongoDB client for a single node cluster on localhost
#quarkus.mongodb.connection-string = mongodb://${DATABASE_USER}:${DATABASE_PASSWORD}@${MONGODB_SERVICE_HOST}:${MONGODB_SERVICE_PORT}/${DATABASE_NAME}
quarkus.mongodb.connection-string=mongodb://localhost:27018
quarkus.mongodb.write-concern.journal=false
# mandatory if you don't specify the name of the database using @MongoEntity
quarkus.mongodb.database = cats
quarkus.http.cors=true
quarkus.swagger-ui.always-include=true

# rest
quarkus.http.test-port=8081

# nsff
app.petbattle.rest.client.NSFFService/mp-rest/scope=javax.inject.Singleton
#app.petbattle.rest.client.NSFFService/mp-rest/url=http://localhost:5000
app.petbattle.rest.client.NSFFService/mp-rest/url=http://tensorflowserving-pet-battle-nsff-pb.apps.hivec.sandbox1249.opentlc.com
app.petbattle.nsff.enabled=false
# images with a nsff prediction greater that this will be rejected
app.petbattle.nsff.limit=0.6


# openshift/kubernetes build and deployment configuration using dekorate
#quarkus.kubernetes.deployment-target=openshift
#quarkus.kubernetes.part-of=cats
#quarkus.kubernetes.name=cats
#quarkus.kubernetes.labels.app=cats
#quarkus.kubernetes.version=latest
#quarkus.kubernetes.image-pull-policy=Always
#quarkus.kubernetes.replicas=1
#quarkus.kubernetes.readiness-probe.initial-delay=0s
#quarkus.kubernetes.readiness-probe.period=10s
# image name
#quarkus.container-image.group=cats
#quarkus.container-image.name=cats
#quarkus.container-image.tag=latest
#quarkus.s2i.base-jvm-image=quay.io/quarkus/ubi-quarkus-native-s2i:20.0.0
